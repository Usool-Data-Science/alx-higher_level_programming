>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([], 3)
[]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

matrix_divided([1,2,3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], )
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'inf')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('nan'))
[[nan, nan, nan], [nan, nan, nan]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6, 4]], 8)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3, 'b'], [4, 5, 6, 4]], 0)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
